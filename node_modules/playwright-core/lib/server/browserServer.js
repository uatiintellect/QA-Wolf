"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserServer = void 0;
const events_1 = require("events");
class BrowserServer extends events_1.EventEmitter {
    constructor(process, gracefullyClose, kill) {
        super();
        this._webSocketServer = null;
        this._process = process;
        this._gracefullyClose = gracefullyClose;
        this._kill = kill;
    }
    process() {
        return this._process;
    }
    wsEndpoint() {
        return this._webSocketServer ? this._webSocketServer.wsEndpoint : '';
    }
    async kill() {
        await this._kill();
    }
    async close() {
        await this._gracefullyClose();
    }
    async _checkLeaks() {
        if (this._webSocketServer)
            await this._webSocketServer.checkLeaks();
    }
    async _closeOrKill(timeout) {
        let timer;
        try {
            await Promise.race([
                this.close(),
                new Promise((resolve, reject) => timer = setTimeout(reject, timeout)),
            ]);
        }
        catch (ignored) {
            await this.kill().catch(ignored => { }); // Make sure to await actual process exit.
        }
        finally {
            clearTimeout(timer);
        }
    }
}
exports.BrowserServer = BrowserServer;
//# sourceMappingURL=browserServer.js.map