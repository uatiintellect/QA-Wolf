"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Download = void 0;
const channelOwner_1 = require("./channelOwner");
const stream_1 = require("./stream");
class Download extends channelOwner_1.ChannelOwner {
    static from(download) {
        return download._object;
    }
    constructor(parent, type, guid, initializer) {
        super(parent, type, guid, initializer);
    }
    url() {
        return this._initializer.url;
    }
    suggestedFilename() {
        return this._initializer.suggestedFilename;
    }
    async path() {
        return (await this._channel.path()).value || null;
    }
    async saveAs(path) {
        return this._wrapApiCall('download.saveAs', async () => {
            await this._channel.saveAs({ path });
        });
    }
    async failure() {
        return (await this._channel.failure()).error || null;
    }
    async createReadStream() {
        const result = await this._channel.stream();
        if (!result.stream)
            return null;
        const stream = stream_1.Stream.from(result.stream);
        return stream.stream();
    }
    async delete() {
        return this._channel.delete();
    }
}
exports.Download = Download;
//# sourceMappingURL=download.js.map